package p8;

import l0.d;
import s.b;

/* loaded from: classes.dex */
public class a extends g {
    public a() {
        this.f16791d = "DG8045";
        this.f16792e = "/html/advance.html#wlan";
        this.f16794g = "/html/wizard/network.html";
        this.f16795h = "/html/advance.html#device_info";
        this.f16796i = "/html/advance.html#wlan";
        this.f16798k = "/html/advance.html#internet";
        this.f16799l = "/html/advance.html#device_mngt";
        this.f16800m = "/html/advance.html#lan";
        this.C = 4;
        this.f16806t = true;
        this.f16807u = true;
    }

    @Override // p8.g, o8.a
    public final String b(boolean z10, String str, String str2) {
        StringBuilder sb = new StringBuilder();
        sb.append("let ispDns = ");
        sb.append(z10);
        sb.append(";\nlet dns1 = \"");
        sb.append(str);
        sb.append("\";\nlet dns2 = \"");
        return b.b(sb, str2, "\";\n\nlet exit = setTimeout(() => {\n    clearInterval(temp);\n    clearTimeout(exit);\n   Android.callbackHandle(JSON.stringify({ result: \"timeout\" }));\n}, 12000);\n\nlet temp = setInterval(() => {\n    try {\n        if (document.getElementById('login_window')) {\n            clearInterval(temp);\n            clearTimeout(exit);\n           Android.callbackHandle(JSON.stringify({ result: \"need_login\" }));\n        }\n        else if (!document.getElementById(\"lan_lanserver_view_data\")) {\n            document.getElementById(\"lan_lanserver_title_ctrl\").click();\n           Android.callbackHandle(JSON.stringify({ result: \"applying_settings\" }));\n        } else {\n            if (ispDns) {\n                Atp.LanserverController.content.dnsmode = \"true\";\n            } else {\n                Atp.LanserverController.content.dnsmode = \"false\";\n                Atp.LanserverController.content.DNSServerone = dns1;\n                Atp.LanserverController.content.DNSServertwo = dns2;\n            }\n            document.getElementById(\"lan_lanserver_view_data_submit_ctrl\").click();\n            clearInterval(temp);\n            clearTimeout(exit);\n            setTimeout(() => {\n               Android.callbackHandle(JSON.stringify({ result: \"executed\" }));\n            }, 1000)\n        }\n    } catch (err){ }\n}, 1000);");
    }

    @Override // p8.g, o8.a
    public final String c(boolean z10, String str) {
        return "let limited = " + z10 + ";\nlet power = \"" + str + "\";\n\nlet exit = setTimeout(() => {\n    clearInterval(temp);\n    clearTimeout(exit);\n    Android.callbackHandle(JSON.stringify({ result: \"timeout\" }));\n}, 10000);\n\nlet temp = setInterval(() => {\n    try {\n        if (document.getElementById('login_window')) {\n            clearInterval(temp);\n            clearTimeout(exit);\n            Android.callbackHandle(JSON.stringify({ result: \"need_login\" }));\n        } else {\n            if (!document.getElementById(\"wlan_ss_view_data_edit_wlan_ss_transpwr_ctrl\")) {\n                (new Array(...document.getElementsByClassName(\"pull-left third_menu_font paddingtop_5 marginleft_3\"))).filter(item => item.innerText.includes(\"Advanced\"))[0].click()\n            } else {\n                Android.callbackHandle(JSON.stringify({ result: \"applying_settings\" }));\n                Atp.WlanSendSettingsController.content[0].WlanStandard = (limited) ? \"b\" : \"b/g/n\";\n                Atp.WlanSendSettingsController.content[0].TransmitPower = Number(power);\n                document.getElementById(\"SendSettings_submitbutton\").click();\n                clearInterval(temp);\n                clearTimeout(exit);\n                Android.callbackHandle(JSON.stringify({ result: \"executed\" }));\n            }\n        }\n    } catch (err){ }\n}, 500);";
    }

    @Override // p8.g, o8.a
    public final String d(String str, String str2) {
        return d.b("let username=\"", str, "\";\nlet password=\"", str2, "\"\nlet exit = setTimeout(() => {\n    clearInterval(temp);\n    clearTimeout(exit);\n    Android.callbackHandle(JSON.stringify({ result: \"timeout\" }));\n}, 10000);\n\nlet temp = setInterval(() => {\n    try {\n        if (document.getElementById('login_window')) {\n            clearInterval(temp);\n            clearTimeout(exit);\n            Android.callbackHandle(JSON.stringify({ result: \"need_login\" }));\n        } else {\n            Android.callbackHandle(\"Applying Settings . .\");\n            if (document.getElementById(\"ConfigForm\").style.display != \"none\" && document.getElementById(\"UserName\")) {\n                document.getElementById(\"UserName\").value = username;\n                document.getElementById(\"Password\").value = password;\n                document.getElementById(\"ButtonApply\").click();\n                clearInterval(temp);\n                clearTimeout(exit);\n                Android.callbackHandle(JSON.stringify({ result: \"executed\" }));\n            } else {\n                selectLine(\"wanInstTable_record_0\");\n            }\n        }\n    } catch (err){ }\n}, 500);");
    }

    @Override // p8.g, o8.a
    public final String f(String str, String str2, String str3, boolean z10, boolean z11) {
        StringBuilder sb = new StringBuilder();
        sb.append("let ssid = \"");
        sb.append(str);
        sb.append("\";\nlet hidden = ");
        sb.append(z10);
        sb.append(";\nlet password = \"");
        sb.append(str2);
        sb.append("\";\nlet open = ");
        sb.append(z11);
        sb.append(";\nlet maxClients = \"");
        return b.b(sb, str3, "\";\n\nlet applied = false;\n\nlet exit = setTimeout(() => {\n    clearInterval(temp);\n    clearTimeout(exit);\n    Android.callbackHandle(JSON.stringify({ result: \"timeout\" }));\n}, 10000);\n\nlet temp = setInterval(() => {\n    try {\n        if (document.getElementById('login_window')) {\n            clearInterval(temp);\n            clearTimeout(exit);\n            Android.callbackHandle(JSON.stringify({ result: \"need_login\" }));\n        } else {\n            Android.callbackHandle(JSON.stringify({ result: \"applying_settings\" }));\n\n            if (!document.getElementById(\"wlan_wifi_mi_ssid2_4GHz1_ctrl\")) {\n                (new Array(...document.getElementsByClassName(\"pull-left third_menu_font paddingtop_5 marginleft_3\"))).filter(item => item.innerText.includes(\"WLAN\"))[0].click()\n            } else if (document.getElementById(\"wlan_enc_view_data_submitstatusview_failview\")) {\n                clearInterval(temp);\n                clearTimeout(exit);\n                Android.callbackHandle(JSON.stringify({ result: \"complex_wlan_password_needed\" }));\n            }\n            else if (applied) {\n                clearInterval(temp);\n                clearTimeout(exit);\n                Android.callbackHandle(JSON.stringify({ result: \"executed\" }));\n            }\n            else {\n                Atp.WlanSendSettingsController.content[0].WifiSsid = ssid;\n                Atp.WlanSendSettingsController.content[0].X_AssociateDeviceNum = maxClients\n                Atp.WlanSendSettingsController.content[0].WifiHideBroadcast = hidden;\n\n                if (!open) {\n                    Atp.WlanSendSettingsController.content[0].BeaconType = \"WPAand11i\"\n                    password && (Atp.WlanSendSettingsController.content[0].WpaPreSharedKey = password);\n                } else {\n                    Atp.WlanSendSettingsController.content[0].BeaconType = \"None\";\n                }\n                if (document.getElementById(\"AllSsidSettings_submitbutton\")) {\n                    document.getElementById(\"AllSsidSettings_submitbutton\").click();\n                    applied=true;    \n                }\n            }\n        }\n    } catch (err){ }\n}, 1000);");
    }

    @Override // p8.g, o8.a
    public final String j(String str, String str2) {
        return d.b("let username = \"", str, "\";\nlet password = \"", str2, "\";\n\nlet exit = setTimeout(() => {\n    clearInterval(temp);\n    clearTimeout(exit);\n    Android.callbackHandle(JSON.stringify({result:\"timeout\"}));    \n}, 25000);\nlet temp = setInterval(() => {\n        if (document.getElementById('login_window')) {\n            let errMsg = document.getElementById('errorCategory').innerText;\n            if (errMsg.includes(\"minute\")) {\n                clearInterval(temp);\n                clearTimeout(exit);\n            Android.callbackHandle(JSON.stringify({ result: \"retry_after\", time: 60 }));\n            }\n            else if(errMsg.includes(\"You are already logged in.\")){\n                clearInterval(temp);\n                clearTimeout(exit);\n                Android.callbackHandle(JSON.stringify({result:\"already_login\"}));\n            }\n             else {\n\n                if (document.getElementById(\"setfirstbutton\")) {\n                    Android.callbackHandle(JSON.stringify({result:\"enforce_login\"}));\n                    document.getElementById(\"setfirstbutton\").click();\n                } else {\n                    if (errMsg.includes(\"Incorrect\")) {\n                        Android.callbackHandle(JSON.stringify({result:\"invalid_login\"}));\n                    }\n                    if (document.getElementById('index_username')) {\n                        Android.callbackHandle(JSON.stringify({result:\"logging_in\"}));\n                        document.getElementById('index_username').value = username;\n                        document.getElementById('password').value = password;\n                        document.getElementById(\"loginbtn\").click();\n                    }\n                }\n            }\n        } else if (document.getElementById('wizard_wifi_title')) {\n            clearInterval(temp);\n            clearTimeout(exit);\n            Android.callbackHandle(JSON.stringify({result:\"login_success\"}));\n        }\n}, 1000);");
    }

    @Override // p8.g, o8.a
    public final String k() {
        return "let exit = setTimeout(() => {\n    clearInterval(temp);\n    clearTimeout(exit);\n    Android.callbackHandle(JSON.stringify({ result: \"timeout\" }));\n}, 10000);\n\nlet temp = setInterval(() => {\n    try {\n        if (document.getElementById('login_window')) {\n            clearInterval(temp);\n            clearTimeout(exit);\n            Android.callbackHandle(JSON.stringify({ result: \"need_login\" }));\n        } else {\n            Android.callbackHandle(JSON.stringify({ result: \"applying_settings\" }));\n            Atp.RebootController.click_proc();\n            clearInterval(temp);\n            clearTimeout(exit);\n            Android.callbackHandle(JSON.stringify({ result: \"executed\" }));\n        }\n    } catch (err){ }\n}, 500);";
    }

    @Override // p8.g, o8.a
    public final String l() {
        return "let exit = setTimeout(() => {\n    clearInterval(temp);\n    clearTimeout(exit);\n    Android.callbackHandle(JSON.stringify({ result: \"timeout\" }));\n}, 10000);\n\nlet temp = setInterval(() => {\n    try {\n        if (document.getElementById('login_window')) {\n            clearInterval(temp);\n            clearTimeout(exit);\n            Android.callbackHandle(JSON.stringify({ result: \"need_login\" }));\n        } else {\n            Android.callbackHandle(JSON.stringify({ result: \"applying_settings\" }));\n            Atp.DmRestoreController.click_proc();\n            clearInterval(temp);\n            clearTimeout(exit);\n            Android.callbackHandle(JSON.stringify({ result: \"executed\" }));\n        }\n    } catch (err){ }\n}, 500);";
    }

    @Override // p8.g, o8.a
    public final String o() {
        return "let exit = setTimeout(() => {\n    clearInterval(temp);\n    clearTimeout(exit);\n    Android.callbackHandle(JSON.stringify({ result: \"timeout\" }));\n}, 10000);\n\nlet temp = setInterval(() => {\n    try {\n        if (document.getElementById('login_window')) {\n            clearInterval(temp);\n            clearTimeout(exit);\n            Android.callbackHandle(JSON.stringify({ result: \"need_login\" }));\n        } else {\n            Android.callbackHandle(JSON.stringify({ result: \"showing_info\" }));\n            let content = Atp.AllHostsController.content;\n            if (content.length) {\n                let devices = content\n                    .filter((item) => item.Rssi && item.WlanActive)\n                    .map(device => {\n                        return {\n                            ip: device.IPAddress,\n                            mac: device.MACAddress,\n                            hostname: device.HostName\n                        }\n                    });\n                if (devices.length) {\n                    info = {\n                        result: \"connected_devices_info\",\n                        devices: devices\n                    }\n                    Android.callbackHandle(JSON.stringify(info));\n                } else {\n                    Android.callbackHandle(JSON.stringify({ result: \"no_devices_found\" }));\n                }\n                clearInterval(temp);\n                clearTimeout(exit);\n            }\n        }\n    } catch (err){ }\n}, 1000);";
    }

    @Override // p8.g, o8.a
    public final String p() {
        return "let exit = setTimeout(() => {\n    clearInterval(temp);\n    clearTimeout(exit);\n    Android.callbackHandle(JSON.stringify({ result: \"timeout\" }));\n}, 10000);\n\nlet temp = setInterval(() => {\n    try {\n        if (document.getElementById('login_window')) {\n            clearInterval(temp);\n            clearTimeout(exit);\n            Android.callbackHandle(JSON.stringify({ result: \"need_login\" }));\n        }\n        else {\n            Android.callbackHandle(JSON.stringify({ result: \"showing_info\" }));\n            Atp.LanserverController.load();\n            if (Atp.LanserverController.content.MaxIP && !Atp.LanserverController.content.DNSServerone) {\n                clearInterval(temp);\n                clearTimeout(exit);\n                Android.callbackHandle(JSON.stringify({\n                    result: \"dns_not_supported\",\n                }));\n            }\n            else if (Atp.LanserverController.content.DNSServerone) {\n                let dnsInfo = Atp.LanserverController.content;\n                let isIspDns = dnsInfo.dnsmode == \"true\";\n                clearInterval(temp);\n                clearTimeout(exit);\n                Android.callbackHandle(JSON.stringify({\n                    result: \"dns_info\",\n                    ispDns: isIspDns,\n                    dns1: !isIspDns ? dnsInfo.DNSServerone : null,\n                    dns2: !isIspDns ? dnsInfo.DNSServertwo : null\n                }));\n            }\n        }\n    } catch (err){ }\n}, 500);";
    }

    @Override // p8.g, o8.a
    public final String q() {
        return "let exit = setTimeout(() => {\n    clearInterval(temp);\n    clearTimeout(exit);\n    Android.callbackHandle(JSON.stringify({ result: \"timeout\" }));\n}, 10000);\n\nlet temp = setInterval(() => {\n    try {\n        if (document.getElementById('login_window')) {\n            clearInterval(temp);\n            clearTimeout(exit);\n            Android.callbackHandle(JSON.stringify({ result: \"need_login\" }));\n        } else {\n            Android.callbackHandle(JSON.stringify({ result: \"showing_info\" }));\n            let limit = Atp.WlanObj.content.WlanStandard;\n            let power = Atp.WlanObj.content.TransmitPower;\n\n            Android.callbackHandle(JSON.stringify({\n                result: \"limit_wifi_info\",\n                speed: limit,\n                power: power + \"%\"\n            }));\n            clearInterval(temp);\n            clearTimeout(exit);\n            Android.callbackHandle(JSON.stringify(info));\n        }\n    } catch (err){ }\n}, 500);";
    }

    @Override // p8.g, o8.a
    public final String r() {
        return "function secondsToHms(d) {\n    d = Number(d);\n    var h = Math.floor(d / 3600);\n    var m = Math.floor(d % 3600 / 60);\n\n    var hDisplay = h > 0 ? h + (h == 1 ? \" hour, \" : \" hours, \") : \"\";\n    var mDisplay = m > 0 ? m + (m == 1 ? \" minute\" : \" minutes\") : \"\";\n    return hDisplay + mDisplay;\n}\n\nlet exit = setTimeout(() => {\n    clearInterval(temp);\n    clearTimeout(exit);\n    Android.callbackHandle(JSON.stringify({ result: \"timeout\" }));\n}, 10000);\n\nlet temp = setInterval(() => {\n    try {\n        if (document.getElementById('login_window')) {\n            clearInterval(temp);\n            clearTimeout(exit);\n            Android.callbackHandle(JSON.stringify({ result: \"need_login\" }));\n        } else {\n            Android.callbackHandle(JSON.stringify({ result: \"showing_info\" }));\n            Atp.DslInfoController.load();\n            if (Atp.DslInfoController.content.Status) {\n                let dslInfo = Atp.DslInfoController.content;\n                let upload = (dslInfo.UpCurrRate / 1024).toFixed(1);\n                let download = (dslInfo.DownCurrRate / 1024).toFixed(1);\n                let maxUpload = (dslInfo.UpstreamMaxBitRate / 1024).toFixed(1);\n                let maxDownload = (dslInfo.DownstreamMaxBitRate / 1024).toFixed(1);\n\n                if (!dslInfo.Modulation) {\n                    Android.callbackHandle(JSON.stringify({ result: \"null_dsl_info\" }));\n                    clearInterval(temp);\n                    clearTimeout(exit);\n                } else {\n\n                    let info = {\n                        result: \"dsl_info\",\n                        modType: dslInfo.Modulation,\n                        upload: upload,\n                        download: download,\n                        lineRate: upload + \"/\" + download + \" Mbps\",\n                        maxUpload: maxUpload,\n                        maxDownload: maxDownload,\n                        maxRate: maxUpload + \"/\" + maxDownload +\" Mbps\",\n                        noise: dslInfo.UpMargin + \"/\" + dslInfo.DownMargin,\n                        chanType: dslInfo.DataPath,\n                        depth: dslInfo.UpDepth + \"/\" + dslInfo.DownDepth,\n                        delay: dslInfo.InterleaveDelayUs + \"/\" + dslInfo.InterleaveDelayDs +\" ms\",\n                        crc: null,\n                        fec: null,\n                        upTime: secondsToHms(dslInfo.ShowtimeStart)\n                    }\n\n                    clearInterval(temp);\n                    clearTimeout(exit);\n                    Android.callbackHandle(JSON.stringify(info));\n                }\n            }\n        }\n    } catch (err){ }\n}, 500);";
    }

    @Override // p8.g, o8.a
    public final String t() {
        return "let exit = setTimeout(() => {\n    clearInterval(temp);\n    clearTimeout(exit);\n    Android.callbackHandle(JSON.stringify({ result: \"timeout\" }));\n}, 10000);\n\nlet temp = setInterval(() => {\n    try {\n        if (document.getElementById('login_window')) {\n            clearInterval(temp);\n            clearTimeout(exit);\n            Android.callbackHandle(JSON.stringify({ result: \"need_login\" }));\n        }\n\n        else {\n            Android.callbackHandle(JSON.stringify({ result: \"showing_info\" }));\n            let ppp = Atp.WanController.content.filter(ele => ele.Enable)[1];\n            ppp = ppp ? ppp : Atp.WanController.content[1];\n            if (Atp.WanController.content[1]) {\n                clearInterval(temp);\n                clearTimeout(exit);\n                let pppUsername;\n                if (ppp.Username.includes(\"@\")) pppUsername = ppp.Username.split('@')[0];\n                else pppUsername = ppp.Username;\n                Android.callbackHandle(JSON.stringify({\n                    result: \"ppp_info\",\n                    pppUsername: pppUsername,\n                    pppPassword: null\n                }));\n            }\n        }\n    } catch (err){ }\n}, 500);";
    }

    @Override // p8.g, o8.a
    public String v() {
        return "let exit = setTimeout(() => {\n    clearInterval(temp);\n    clearTimeout(exit)\n    Android.callbackHandle(JSON.stringify({ result: \"timeout\" }));\n}, 10000);\n\nlet temp = setInterval(() => {\n    try {\n        if (document.getElementById('login_window')) {\n            clearInterval(temp);\n            clearTimeout(exit);\n            Android.callbackHandle(JSON.stringify({ result: \"need_login\" }));\n        }\n        else {\n            Android.callbackHandle(JSON.stringify({ result: \"showing_info\" }));\n            Atp.WlanObj.isShow24Password = true;\n            Atp.WlanObj.loadPassword();\n            if (Atp.WlanObj.content.WpaPreSharedKey != \"********\") {\n                let wlanInfo = Atp.WlanObj.content;\n                Android.callbackHandle(JSON.stringify({\n                    result: \"basic_wifi_info\",\n                    ssidName: wlanInfo.WifiSsid,\n                    password: wlanInfo.WpaPreSharedKey,\n                    hidden: wlanInfo.WifiHideBroadcast,\n                    safe: wlanInfo.BeaconType,\n                    maxClients: wlanInfo.X_AssociateDeviceNum\n                }));\n                clearInterval(temp);\n                clearTimeout(exit);\n            }\n        }\n    } catch (err){ }\n}, 500);";
    }
}

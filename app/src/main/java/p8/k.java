package p8;

import l0.d;
import o8.a;
import s.b;

/* loaded from: classes.dex */
public final class k extends a {
    public k() {
        this.f16791d = "TDW8968";
        this.f16792e = "";
        this.f16794g = "";
        this.f16795h = "";
        this.f16797j = "";
        this.f16798k = "";
        this.f16799l = "";
        this.f16800m = "";
        this.f16801n = "";
        this.f16802o = "";
        this.f16806t = true;
        this.f16805s = true;
        this.f16807u = true;
        this.f16811z = false;
        this.f16804r = true;
        this.f16803q = false;
        this.f16810x = false;
        this.y = false;
    }

    @Override // o8.a
    public final String b(boolean z10, String str, String str2) {
        StringBuilder sb = new StringBuilder();
        sb.append("let ispDns = ");
        sb.append(z10);
        sb.append(";\nlet dns1 = \"");
        sb.append(str);
        sb.append("\";\nlet dns2 = \"");
        return b.b(sb, str2, "\";\n\nlet exit = setTimeout(() => {\n    clearInterval(temp);\n    clearTimeout(exit);\n    Android.callbackHandle(JSON.stringify({ result: \"timeout\" }));\n}, 20000);\nfunction isNeedLogin() {\n    return !!(document.getElementsByClassName('loginBtn')[0] || (window.frames[2] && window.frames[2].document.getElementsByClassName('loginBtn')[0]))\n}\nlet temp = setInterval(() => {\n    try {\n        if (isNeedLogin()) {\n            clearInterval(temp);\n            clearTimeout(exit);\n            Android.callbackHandle(JSON.stringify({ result: \"need_login\" }));\n        } else {\n            Android.callbackHandle(JSON.stringify({ result: \"applying_settings\" }));\n            if (window.frames[2]) {\n                let htmlContent = window.frames[2].document.getElementsByTagName('html')[0].innerHTML;\n                if (htmlContent.includes('DNS Server Configuration')) {\n                    if (window.frames[2].document.forms[0].dns[0]) {\n                        if (ispDns) {\n                            window.frames[2].document.forms[0].dns[0].click();\n                            if (window.frames[2].document.getElementsByName('selDnsIfcs')[0].options[0]) {\n                                window.frames[2].document.querySelector(\"input[value='Save/Apply']\").click();\n                            } else {\n                                window.frames[2].document.getElementsByName('availIfcs')[0].value = window.frames[2].document.getElementsByName('availIfcs')[0].options[0].value;\n                                window.frames[2].btnAdd();\n                                window.frames[2].document.querySelector(\"input[value='Save/Apply']\").click();\n                            }\n                        } else {\n                            window.frames[2].document.forms[0].dns[1].click();\n                            window.frames[2].document.getElementsByName(\"dnsPrimary\")[0].value = dns1;\n                            window.frames[2].document.getElementsByName(\"dnsSecondary\")[0].value = dns2;\n                            window.frames[2].document.querySelector(\"input[value='Save/Apply']\").click();\n                        }\n                        setTimeout(() => {\n                            Android.callbackHandle(JSON.stringify({ result: \"executed\" }));\n                            clearInterval(temp);\n                            clearTimeout(exit);\n                        }, 500);\n                    }\n\n                } else {\n                    let heading = window.frames[1].document.evaluate(\"//a[contains(., 'DNS')]\", window.frames[1].document, null, XPathResult.ANY_TYPE, null);\n                    let menuItem = heading.iterateNext();\n                    menuItem.click();\n                }\n            }\n        }\n    } catch (err) { console.log(err) }\n}, 1000);");
    }

    @Override // o8.a
    public final String d(String str, String str2) {
        return d.b("let pppUsername = \"", str, "\";\nlet pppPassword = \"", str2, "\";\n\nlet exit = setTimeout(() => {\n    clearInterval(temp);\n    clearTimeout(exit);\n    Android.callbackHandle(JSON.stringify({ result: \"timeout\" }));\n}, 20000);\nfunction isNeedLogin() {\n    return !!(document.getElementsByClassName('loginBtn')[0] || (window.frames[2] && window.frames[2].document.getElementsByClassName('loginBtn')[0]))\n}\nlet temp = setInterval(() => {\n    try {\n        if (isNeedLogin()) {\n            clearInterval(temp);\n            clearTimeout(exit);\n            Android.callbackHandle(JSON.stringify({ result: \"need_login\" }));\n        } else {\n            Android.callbackHandle(JSON.stringify({ result: \"applying_settings\" }));\n            if (window.frames[2]) {\n                let htmlContent = window.frames[2].document.getElementsByTagName('html')[0].innerHTML;\n                if (htmlContent.includes('Quick Setup - Start') ||\n                    htmlContent.includes('Quick Setup-Operation mode') ||\n                    htmlContent.includes('Quick Setup - WAN Configurations') ||\n                    htmlContent.includes('Quick Setup - Wireless Configurations') ||\n                    htmlContent.includes('Quick Setup - Summary')) {\n\n                    if (!htmlContent.includes('Quick Setup - WAN Configurations') && !htmlContent.includes('Quick Setup - Summary')) {\n                        window.frames[2].document.querySelector(\"input[value='Next']\").click();\n                    } else if (htmlContent.includes('Quick Setup - WAN Configurations')) {\n                        if (window.frames[2].document.getElementsByName(\"pppUserName\")[0]) {\n                            window.frames[2].document.getElementsByName(\"pppUserName\")[0].value = pppUsername;\n                            window.frames[2].document.getElementsByName(\"pppPassword\")[0].value = pppPassword;\n                            window.frames[2].document.querySelector(\"input[value='Next']\").click();\n                        }\n                    } else if (htmlContent.includes('Quick Setup - Summary')) {\n                        window.frames[2].document.querySelector(\"input[value='Confirm']\").click()\n                        setTimeout(() => {\n                            Android.callbackHandle(JSON.stringify({ result: \"executed\" }));\n                            clearInterval(temp);\n                            clearTimeout(exit);\n                        }, 500);\n                    }\n                } else {\n                    let heading = window.frames[1].document.evaluate(\"//a[contains(., 'Quick Setup')]\", window.frames[1].document, null, XPathResult.ANY_TYPE, null);\n                    let menuItem = heading.iterateNext();\n                    menuItem.click();\n                }\n            }\n        }\n    } catch (err) { Android.callbackHandle(err) }\n}, 1000);");
    }

    @Override // o8.a
    public final String e(boolean z10, String str, String str2) {
        StringBuilder sb = new StringBuilder();
        sb.append("let activateBWLimiter = ");
        sb.append(z10);
        sb.append(";\nlet upload = ");
        sb.append(str);
        sb.append(";\nlet download = ");
        return b.b(sb, str2, ";\nupload *= 1024;\ndownload *= 1024;\n\n\nlet exit = setTimeout(() => {\n    clearInterval(temp);\n    clearTimeout(exit);\n    Android.callbackHandle(JSON.stringify({ result: \"timeout\" }));\n}, 20000);\nfunction isNeedLogin() {\n    return !!(document.getElementsByClassName('loginBtn')[0] || (basefrm && basefrm.document.getElementsByClassName('loginBtn')[0]))\n}\nlet temp = setInterval(() => {\n    try {\n        if (isNeedLogin()) {\n            clearInterval(temp);\n            clearTimeout(exit);\n            Android.callbackHandle(JSON.stringify({ result: \"need_login\" }));\n        } else {\n            Android.callbackHandle(JSON.stringify({ result: \"applying_settings\" }));\n\n            if (window.frames[2]) {\n                if (window.frames[2].document.getElementsByTagName('html')[0].innerHTML.includes('Bandwidth Control')) {\n\n                    if (!activateBWLimiter) {\n                        window.frames[2].document.getElementsByName(\"enableTC\")[0].checked = false;\n                        window.frames[2].enableClick();\n                    } else {\n                        window.frames[2].document.getElementsByName(\"enableTC\")[0].checked = true;\n                        window.frames[2].enableClick();\n                        window.frames[2].document.getElementsByName(\"totalUpBW\")[0].value = upload;\n                        window.frames[2].document.getElementsByName(\"totalDownBW\")[0].value = download;\n                    }\n                    window.frames[2].document.querySelector(\"input[value='Save/Apply']\").click();\n                    setTimeout(() => {\n                        Android.callbackHandle(JSON.stringify({ result: \"executed\" }));\n                        clearInterval(temp);\n                        clearTimeout(exit);\n                    }, 1000);\n\n                } else {\n                    let heading = window.frames[1].document.evaluate(\"//a[contains(., 'Bandwidth Control')]\", window.frames[1].document, null, XPathResult.ANY_TYPE, null);\n                    let menuItem = heading.iterateNext();\n                    menuItem.click();\n                }\n            }\n        }\n    } catch (err) { Android.callbackHandle(err) }\n}, 2000);\n");
    }

    @Override // o8.a
    public final String g(boolean z10, String str, String str2, String str3, boolean z11, boolean z12) {
        return "\nlet ssid = '" + str + "';\nlet password = '" + str2 + "';\nlet open = " + z12 + ";\nlet hidden = " + z11 + ";\nlet security = " + z10 + ";\n\nlet exit = setTimeout(() => {\n    clearInterval(temp);\n    clearTimeout(exit);\n    Android.callbackHandle(JSON.stringify({ result: \"timeout\" }));\n}, 20000);\nfunction isNeedLogin() {\n    return !!(document.getElementsByClassName('loginBtn')[0] || (basefrm && basefrm.document.getElementsByClassName('loginBtn')[0]))\n}\nlet temp = setInterval(() => {\n    try {\n        if (isNeedLogin()) {\n            clearInterval(temp);\n            clearTimeout(exit);\n            Android.callbackHandle(JSON.stringify({ result: \"need_login\" }));\n        } else {\n            Android.callbackHandle(JSON.stringify({ result: \"applying_settings\" }));\n            if (window.frames[2]) {\n                let frameContent = window.frames[2].document.getElementsByTagName('html')[0].innerHTML;\n                if (!security) {\n                    if (frameContent.includes('Wireless -- Basic')) {\n                        window.frames[2].document.getElementsByName(\"wlSsid\")[0].value = ssid;\n                        window.frames[2].document.getElementsByName(\"wlHide\")[0].checked = hidden;\n                        window.frames[2].document.querySelector(\"input[value='Save/Apply']\").click();\n                        setTimeout(() => {\n                            Android.callbackHandle(JSON.stringify({ result: \"executed\" }));\n                            clearInterval(temp);\n                            clearTimeout(exit);\n                        }, 2000);\n                    } else {\n                        let heading = window.frames[1].document.evaluate(\"//a[contains(., 'Basic')]\", window.frames[1].document, null, XPathResult.ANY_TYPE, null);\n                        let menuItem = heading.iterateNext();\n                        menuItem.click();\n                    }\n\n                } else {\n                    if (frameContent.includes('Wireless -- Security')) {\n                        if (open) {\n                            window.frames[2].document.getElementsByName(\"wlAuthMode\")[0].value = 'open';\n                            window.frames[2].authModeChange(0);\n                        } else {\n                            window.frames[2].document.getElementsByName(\"wlAuthMode\")[0].value = 'psk2';\n                            window.frames[2].authModeChange(0);\n                            window.frames[2].document.getElementsByName(\"wlWpaPsk\")[0].value = password;\n                        }\n                        window.frames[2].document.querySelector(\"input[value='Save/Apply']\").click();\n                        setTimeout(() => {\n                            Android.callbackHandle(JSON.stringify({ result: \"executed\" }));\n                            clearInterval(temp);\n                            clearTimeout(exit);\n                        }, 2000);\n                    } else {\n                        let heading = window.frames[1].document.evaluate(\"//a[contains(., 'Security')]\", window.frames[1].document, null, XPathResult.ANY_TYPE, null);\n                        heading.iterateNext()\n                        let menuItem = heading.iterateNext();\n                        menuItem.click();\n                    }\n                }\n            }\n        }\n    } catch (err) { Android.callbackHandle(err) }\n}, 700);";
    }

    @Override // o8.a
    public final String h(String str, String str2) {
        return i(str, str2);
    }

    @Override // o8.a
    public final String i(String str, String str2) {
        return e0.d.a("let mac = \"", str2, "\";\nlet exit = setTimeout(() => {\n    clearInterval(temp);\n    clearTimeout(exit);\n    Android.callbackHandle(JSON.stringify({ result: \"timeout\" }));\n}, 20000);\nfunction isNeedLogin() {\n    return !!(document.getElementsByClassName('loginBtn')[0] || (window.frames[2] && window.frames[2].document.getElementsByClassName('loginBtn')[0]))\n}\nlet temp = setInterval(() => {\n    try {\n        if (isNeedLogin()) {\n            clearInterval(temp);\n            clearTimeout(exit);\n            Android.callbackHandle(JSON.stringify({ result: \"need_login\" }));\n        } else {\n            Android.callbackHandle(JSON.stringify({ result: \"applying_settings\" }));\n            if (window.frames[2]) {\n                let htmlContent = window.frames[2].document.getElementsByTagName('html')[0].innerHTML;\n                if (htmlContent.includes('Wireless -- MAC Filter')) {\n                    if (window.frames[2].document.getElementsByName('wlFltMacAddr')[0]) {\n                        window.frames[2].document.getElementsByName('wlFltMacAddr')[0].value = mac;\n                        window.frames[2].document.querySelector(\"input[value='Save/Apply']\").click();\n\n                        setTimeout(() => Android.callbackHandle(JSON.stringify({ result: \"executed\" })), 1000);\n                        clearInterval(temp);\n                        clearTimeout(exit);\n                    } else if (window.frames[2].document.getElementsByName('wlFltMacMode')[0]) {\n                        window.frames[2].document.querySelector(\"input[value='Add']\").click();\n                    }\n                } else {\n                    let heading = window.frames[1].document.evaluate(\"//a[contains(., 'MAC Filter')]\", window.frames[1].document, null, XPathResult.ANY_TYPE, null);\n                    heading.iterateNext();\n                    let menuItem = heading.iterateNext();\n                    menuItem.click();\n                }\n            }\n        }\n    } catch (err) { Android.callbackHandle(err) }\n}, 1000);");
    }

    @Override // o8.a
    public final String j(String str, String str2) {
        return d.b("let username = \"", str, "\";\nlet password = \"", str2, "\";\nlet exit = setTimeout(() => {\n    clearInterval(temp);\n    clearTimeout(exit);\n    Android.callbackHandle(JSON.stringify({ result: \"timeout\" }));\n}, 25000);\n\nlet temp = setInterval(() => {\n    try {\n        if (document.getElementsByClassName('loginBtn')[0]) {\n            if (document.getElementById(\"tip\") && document.getElementById(\"tip\").innerText.includes('exceeded ')) {\n                clearInterval(temp);\n                clearTimeout(exit);\n                Android.callbackHandle(JSON.stringify({ result: \"retry_after\", time: parseInt(document.getElementById(\"tip\").innerText.split('in')[2].slice(0, -1).trim()) }));\n            } else {\n                Android.callbackHandle(JSON.stringify({ result: \"logging_in\" }));\n                document.getElementById('userName') && (document.getElementById('userName').value = username);\n                document.getElementById('pcPassword').value = password;\n                document.getElementsByClassName('loginBtn')[0].click();\n            }\n        } else if (menufrm) {\n            clearInterval(temp);\n            clearTimeout(exit);\n            Android.callbackHandle(JSON.stringify({ result: \"login_success\" }));\n        }\n    } catch (err){ }\n}, 1000);");
    }

    @Override // o8.a
    public final String k() {
        return "let exit = setTimeout(() => {\n    clearInterval(temp);\n    clearTimeout(exit);\n    Android.callbackHandle(JSON.stringify({ result: \"timeout\" }));\n}, 20000);\nfunction isNeedLogin() {\n    return !!(document.getElementsByClassName('loginBtn')[0] || (basefrm && basefrm.document.getElementsByClassName('loginBtn')[0]))\n}\nlet temp = setInterval(() => {\n    try {\n        if (isNeedLogin()) {\n            clearInterval(temp);\n            clearTimeout(exit);\n            Android.callbackHandle(JSON.stringify({ result: \"need_login\" }));\n        } else {\n            if (window.frames[2]) {\n                if (window.frames[2].document.getElementsByTagName('html')[0].innerHTML.includes('Reboot router')) {\n                    Android.callbackHandle(JSON.stringify({ result: \"applying_settings\" }));\n                    var loc = 'rebootinfo.cgi?';\n                    loc += 'sessionKey=' + window.frames[2].window.sessionKey;\n                    var code = 'location=\"' + loc + '\"';\n                    eval(code);\n                    Android.callbackHandle(JSON.stringify({ result: \"executed\" }));\n                    clearInterval(temp);\n                    clearTimeout(exit);\n                } else {\n                    let heading = window.frames[1].document.evaluate(\"//a[contains(., 'Reboot')]\", window.frames[1].document, null, XPathResult.ANY_TYPE, null);\n                    let menuItem = heading.iterateNext();\n                    menuItem.click();\n                }\n            }\n        }\n    } catch (err){ }\n}, 1000);";
    }

    @Override // o8.a
    public final String l() {
        return "let exit = setTimeout(() => {\n    clearInterval(temp);\n    clearTimeout(exit);\n    Android.callbackHandle(JSON.stringify({ result: \"timeout\" }));\n}, 20000);\nfunction isNeedLogin() {\n    return !!(document.getElementsByClassName('loginBtn')[0] || (basefrm && basefrm.document.getElementsByClassName('loginBtn')[0]))\n}\nlet temp = setInterval(() => {\n    try {\n        if (isNeedLogin()) {\n            clearInterval(temp);\n            clearTimeout(exit);\n            Android.callbackHandle(JSON.stringify({ result: \"need_login\" }));\n        } else {\n            if (window.frames[2]) {\n                let htmlContent = window.frames[2].document.getElementsByTagName('html')[0].innerHTML;\n                if (htmlContent.includes('Tools -- Restore Default Settings')) {\n                    Android.callbackHandle(JSON.stringify({ result: \"applying_settings\" }));\n                    let sessionKeyIndex = htmlContent.indexOf('sessionKey');\n                    let startOfSessionKeyValue = htmlContent.indexOf('=', sessionKeyIndex);\n                    let endOfSessionKeyValue = htmlContent.indexOf(';', startOfSessionKeyValue);\n                    let sessionKeyValue = htmlContent.substring(startOfSessionKeyValue + 1, endOfSessionKeyValue - 1);\n                    var loc = 'restoreinfo.cgi?';\n                    loc += 'sessionKey=' + sessionKeyValue;\n                    var code = 'location=\"' + loc + '\"';\n                    eval(code);\n                    Android.callbackHandle(JSON.stringify({ result: \"executed\" }));\n                    clearInterval(temp);\n                    clearTimeout(exit);\n                } else {\n                    let heading = window.frames[1].document.evaluate(\"//a[contains(., 'Restore Default')]\", window.frames[1].document, null, XPathResult.ANY_TYPE, null);\n                    let menuItem = heading.iterateNext();\n                    menuItem.click();\n                }\n            }\n        }\n    } catch (err) {console.log(err) }\n}, 1000);";
    }

    @Override // o8.a
    public final String n() {
        return "let exit = setTimeout(() => {\n    clearInterval(temp);\n    clearTimeout(exit);\n    Android.callbackHandle(JSON.stringify({ result: \"timeout\" }));\n}, 20000);\nfunction isNeedLogin() {\n    return !!(document.getElementsByClassName('loginBtn')[0] || (window.frames[2] && window.frames[2].document.getElementsByClassName('loginBtn')[0]))\n}\nfunction getBlockedDevices() {\n    let heading = window.frames[2].document.evaluate(\"//table[contains(., 'MAC Address')]\", window.frames[2].document, null, XPathResult.ANY_TYPE, null);\n    return [...heading.iterateNext().querySelectorAll(\"tr\")].slice(1).map(e => {\n        return {\n            mac: e.children[0].innerText,\n            hostname: \"Unknown\"\n        }\n    })\n}\nlet temp = setInterval(() => {\n    try {\n        if (isNeedLogin()) {\n            clearInterval(temp);\n            clearTimeout(exit);\n            Android.callbackHandle(JSON.stringify({ result: \"need_login\" }));\n        } else {\n            Android.callbackHandle(JSON.stringify({ result: \"showing_info\" }));\n            if (window.frames[2]) {\n                let htmlContent = window.frames[2].document.getElementsByTagName('html')[0].innerHTML;\n                if (htmlContent.includes('Wireless -- MAC Filter')) {\n                    Android.callbackHandle(JSON.stringify({\n                        result: \"blacklist_devices_info\",\n                        devices: getBlockedDevices()\n                    }));\n                    clearInterval(temp);\n                    clearTimeout(exit);\n\n                } else {\n                    let heading = window.frames[1].document.evaluate(\"//a[contains(., 'MAC Filter')]\", window.frames[1].document, null, XPathResult.ANY_TYPE, null);\n                    heading.iterateNext();\n                    let menuItem = heading.iterateNext();\n                    menuItem.click();\n                }\n            }\n        }\n    } catch (err) { Android.callbackHandle(err) }\n}, 1000);";
    }

    @Override // o8.a
    public final String o() {
        return "let exit = setTimeout(() => {\n    clearInterval(temp);\n    clearTimeout(exit);\n    Android.callbackHandle(JSON.stringify({ result: \"timeout\" }));\n}, 10000);\nfunction isNeedLogin() {\n    return !!(document.getElementsByClassName('loginBtn')[0] || (window.frames[2] && window.frames[2].document.getElementsByClassName('loginBtn')[0]))\n}\nlet temp = setInterval(() => {\n    try {\n        if (isNeedLogin()) {\n            clearInterval(temp);\n            clearTimeout(exit);\n            Android.callbackHandle(JSON.stringify({ result: \"need_login\" }));\n        } else {\n            Android.callbackHandle(JSON.stringify({ result: \"showing_info\" }));\n\n            if (window.frames[2]) {\n                if (window.frames[2].document.getElementsByTagName('html')[0].innerHTML.includes('Device Info -- DHCP Leases')) {\n                    let rows = [...window.frames[2].document.querySelectorAll(\"table[cellpadding='4'] tr\")].slice(1);\n                    if (rows.length) {\n                        let connectedDevices = rows.map(row => {\n                            return {\n                                ip: row.children[2].innerText,\n                                mac: row.children[1].innerText,\n                                hostname: row.children[0].innerText\n                            }\n                        })\n                        info = {\n                            result: \"connected_devices_info\",\n                            devices: connectedDevices\n                        }\n                        Android.callbackHandle(JSON.stringify(info));\n                    } else {\n                        Android.callbackHandle(JSON.stringify({ result: \"no_devices_found\" }));\n\n                    }\n                    clearInterval(temp);\n                    clearTimeout(exit);\n\n                } else {\n                    let heading = window.frames[1].document.evaluate(\"//a[contains(., 'DHCP')]\", window.frames[1].document, null, XPathResult.ANY_TYPE, null);\n                    let menuItem = heading.iterateNext();\n                    menuItem.click();\n                }\n            }\n        }\n    } catch (err) { Android.callbackHandle(err) }\n}, 2000);";
    }

    @Override // o8.a
    public final String p() {
        return "let exit = setTimeout(() => {\n    clearInterval(temp);\n    clearTimeout(exit);\n    Android.callbackHandle(JSON.stringify({ result: \"timeout\" }));\n}, 20000);\nfunction isNeedLogin() {\n    return !!(document.getElementsByClassName('loginBtn')[0] || (window.frames[2] && window.frames[2].document.getElementsByClassName('loginBtn')[0]))\n}\nlet temp = setInterval(() => {\n    try {\n        if (isNeedLogin()) {\n            clearInterval(temp);\n            clearTimeout(exit);\n            Android.callbackHandle(JSON.stringify({ result: \"need_login\" }));\n        } else {\n            Android.callbackHandle(JSON.stringify({ result: \"showing_info\" }));\n            if (window.frames[2]) {\n                let htmlContent = window.frames[2].document.getElementsByTagName('html')[0].innerHTML;\n                if (htmlContent.includes('DNS Server Configuration')) {\n                    if (window.frames[2].document.forms[0].dns[0]) {\n                        let isISPDns = window.frames[2].document.forms[0].dns[0].checked;\n                        let dns1 = window.frames[2].document.getElementsByName(\"dnsPrimary\")[0].value;\n                        let dns2 = window.frames[2].document.getElementsByName(\"dnsSecondary\")[0].value;\n                        clearInterval(temp);\n                        clearTimeout(exit);\n                        Android.callbackHandle(JSON.stringify({\n                            result: \"dns_info\",\n                            ispDns: isISPDns,\n                            dns1: !isISPDns ? dns1 : null,\n                            dns2: !isISPDns ? dns2 : null\n                        }));\n                    }\n\n                } else {\n                    let heading = window.frames[1].document.evaluate(\"//a[contains(., 'DNS')]\", window.frames[1].document, null, XPathResult.ANY_TYPE, null);\n                    let menuItem = heading.iterateNext();\n                    menuItem.click();\n                }\n            }\n        }\n    } catch (err) { Android.callbackHandle(err) }\n}, 1000);";
    }

    @Override // o8.a
    public final String r() {
        return "let exit = setTimeout(() => {\n    clearInterval(temp);\n    clearTimeout(exit);\n    Android.callbackHandle(JSON.stringify({ result: \"timeout\" }));\n}, 20000);\nfunction isNeedLogin() {\n    return !!(document.getElementsByClassName('loginBtn')[0] || (basefrm && basefrm.document.getElementsByClassName('loginBtn')[0]))\n}\nlet temp = setInterval(() => {\n    try {\n        if (isNeedLogin()) {\n            clearInterval(temp);\n            clearTimeout(exit);\n            Android.callbackHandle(JSON.stringify({ result: \"need_login\" }));\n        } else {\n            Android.callbackHandle(JSON.stringify({ result: \"showing_info\" }));\n\n            if (window.frames[2]) {\n                if (window.frames[2].document.getElementsByTagName('html')[0].innerHTML.includes('Statistics -- xDSL')) {\n                    let rows = [...window.frames[2].document.querySelectorAll(\"table[cellpadding='2'] tr\")]\n                    if (rows[2].children[1].innerText != 'Up') {\n                        Android.callbackHandle(JSON.stringify({ result: \"null_dsl_info\" }));\n                    }\n                    else {\n                        let upload = parseFloat(rows[14].children[2].innerText.replace(',', '.')).toFixed(1);\n                        let download = parseFloat(rows[14].children[1].innerText.replace(',', '.')).toFixed(1);\n                        let lineRateMb = upload + '/' + download + ' Mbps';\n                        let maxUpload = parseFloat(rows[10].children[2].innerText.replace(',', '.')).toFixed(1);\n                        let maxDownload = parseFloat(rows[10].children[1].innerText.replace(',', '.')).toFixed(1);\n                        let maxRateMb = maxUpload + '/' + maxDownload + ' Mbps';\n\n                        let info = {\n                            result: \"dsl_info\",\n                            modType: rows[0].children[1].innerText,\n                            upload: upload,\n                            download: download,\n                            lineRate: lineRateMb,\n                            maxUpload: maxUpload,\n                            maxDownload: maxDownload,\n                            maxRate: maxRateMb,\n                            noise: (parseFloat(rows[7].children[2].innerText) / 10) + '/' + (parseFloat(rows[7].children[1].innerText) / 10) + \" dB\",\n                            chanType: rows[23].children[1].innerText == '1' ? \"Fast\" : \"Interleaved\",\n                            depth: rows[23].children[2].innerText + '/' + rows[23].children[1].innerText,\n                            delay: rows[24].children[2].innerText + '/' + rows[24].children[1].innerText,\n                            crc: rows[31].children[2].innerText + '/' + rows[31].children[1].innerText,\n                            fec: rows[30].children[2].innerText + '/' + rows[30].children[1].innerText,\n                            upTime: null\n                        }\n                        Android.callbackHandle(JSON.stringify(info));\n                    }\n                    clearInterval(temp);\n                    clearTimeout(exit);\n\n                } else {\n                    let heading = window.frames[1].document.evaluate(\"//a[contains(., 'xDSL')]\", window.frames[1].document, null, XPathResult.ANY_TYPE, null);\n                    let menuItem = heading.iterateNext();\n                    menuItem.click();\n                }\n            }\n        }\n    } catch (err) { Android.callbackHandle(err) }\n}, 1000);";
    }

    @Override // o8.a
    public final String s() {
        return "let exit = setTimeout(() => {\n    clearInterval(temp);\n    clearTimeout(exit);\n    Android.callbackHandle(JSON.stringify({ result: \"timeout\" }));\n}, 20000);\nfunction isNeedLogin() {\n    return !!(document.getElementsByClassName('loginBtn')[0] || (window.frames[2] && window.frames[2].document.getElementsByClassName('loginBtn')[0]))\n}\nlet temp = setInterval(() => {\n    try {\n        if (isNeedLogin()) {\n            clearInterval(temp);\n            clearTimeout(exit);\n            Android.callbackHandle(JSON.stringify({ result: \"need_login\" }));\n        } else {\n            Android.callbackHandle(JSON.stringify({ result: \"showing_info\" }));\n            if (window.frames[2]) {\n                let htmlContent = window.frames[2].document.getElementsByTagName('html')[0].innerHTML;\n                if (htmlContent.includes('Wireless -- MAC Filter')) {\n                    let blockerEnabled = window.frames[2].document.getElementsByName('wlFltMacMode')[2].checked;\n                    Android.callbackHandle(JSON.stringify({\n                        result: \"filter_status_info\",\n                        blockerEnabled: blockerEnabled\n                    }));\n                    clearInterval(temp);\n                    clearTimeout(exit);\n\n                } else {\n                    let heading = window.frames[1].document.evaluate(\"//a[contains(., 'MAC Filter')]\", window.frames[1].document, null, XPathResult.ANY_TYPE, null);\n                    heading.iterateNext();\n                    let menuItem = heading.iterateNext();\n                    menuItem.click();\n                }\n            }\n        }\n    } catch (err) { Android.callbackHandle(err) }\n}, 1000);";
    }

    @Override // o8.a
    public final String t() {
        return "let exit = setTimeout(() => {\n    clearInterval(temp);\n    clearTimeout(exit);\n    Android.callbackHandle(JSON.stringify({ result: \"timeout\" }));\n}, 20000);\nfunction isNeedLogin() {\n    return !!(document.getElementsByClassName('loginBtn')[0] || (window.frames[2] && window.frames[2].document.getElementsByClassName('loginBtn')[0]))\n}\nlet temp = setInterval(() => {\n    try {\n        if (isNeedLogin()) {\n            clearInterval(temp);\n            clearTimeout(exit);\n            Android.callbackHandle(JSON.stringify({ result: \"need_login\" }));\n        } else {\n            Android.callbackHandle(JSON.stringify({ result: \"showing_info\" }));\n            if (window.frames[2]) {\n                let htmlContent = window.frames[2].document.getElementsByTagName('html')[0].innerHTML;\n                if (htmlContent.includes('Quick Setup - Start') || htmlContent.includes('Quick Setup-Operation mode') || htmlContent.includes('Quick Setup - WAN Configurations')) {\n                    if (htmlContent.includes('Quick Setup - Start') || htmlContent.includes('Quick Setup-Operation mode')) {\n                        window.frames[2].document.querySelector(\"input[value='Next']\").click();\n                    } else {\n                        if (window.frames[2].document.getElementsByName(\"pppUserName\")[0]) {\n                            clearInterval(temp);\n                            clearTimeout(exit);\n                            Android.callbackHandle(JSON.stringify({\n                                result: \"ppp_info\",\n                                pppUsername: window.frames[2].document.getElementsByName(\"pppUserName\")[0].value,\n                                pppPassword: window.frames[2].document.getElementsByName(\"pppPassword\")[0].value\n                            }));\n                        }\n                    }\n                } else {\n                    let heading = window.frames[1].document.evaluate(\"//a[contains(., 'Quick Setup')]\", window.frames[1].document, null, XPathResult.ANY_TYPE, null);\n                    let menuItem = heading.iterateNext();\n                    menuItem.click();\n                }\n            }\n        }\n    } catch (err) { Android.callbackHandle(err) }\n}, 1000);";
    }

    @Override // o8.a
    public final String u() {
        return "\nlet exit = setTimeout(() => {\n    clearInterval(temp);\n    clearTimeout(exit);\n    Android.callbackHandle(JSON.stringify({ result: \"timeout\" }));\n}, 20000);\nfunction isNeedLogin() {\n    return !!(document.getElementsByClassName('loginBtn')[0] || (basefrm && basefrm.document.getElementsByClassName('loginBtn')[0]))\n}\nlet temp = setInterval(() => {\n    try {\n        if (isNeedLogin()) {\n            clearInterval(temp);\n            clearTimeout(exit);\n            Android.callbackHandle(JSON.stringify({ result: \"need_login\" }));\n        } else {\n            Android.callbackHandle(JSON.stringify({ result: \"showing_info\" }));\n\n            if (window.frames[2]) {\n                if (window.frames[2].document.getElementsByTagName('html')[0].innerHTML.includes('Bandwidth Control')) {\n\n                    if (!window.frames[2].document.getElementsByName(\"enableTC\")[0].checked) {\n                        Android.callbackHandle(JSON.stringify({\n                            result: \"personalized_limit_info\",\n                            upload: null,\n                            download: null,\n                            maxUpload: null,\n                            maxDownload: null,\n                            limited: false,\n                        }));\n                        clearInterval(temp);\n                        clearTimeout(exit);\n                    }\n                    else {\n                        let uploadEle = window.frames[2].document.getElementsByName(\"totalUpBW\")[0];\n                        let downloadEle = window.frames[2].document.getElementsByName(\"totalDownBW\")[0];\n                        let curUpload = (Number(uploadEle.value) / 1024).toFixed(1);\n                        let curDownload = (Number(downloadEle.value) / 1024).toFixed(1);\n                        Android.callbackHandle(JSON.stringify({\n                            result: \"personalized_limit_info\",\n                            upload: curUpload,\n                            download: curDownload,\n                            maxUpload: null,\n                            maxDownload: null,\n                            limited: true,\n                        }));\n                        clearInterval(temp);\n                        clearTimeout(exit);\n                    }\n\n                } else {\n                    let heading = window.frames[1].document.evaluate(\"//a[contains(., 'Bandwidth Control')]\", window.frames[1].document, null, XPathResult.ANY_TYPE, null);\n                    let menuItem = heading.iterateNext();\n                    menuItem.click();\n                }\n            }\n        }\n    } catch (err) { Android.callbackHandle(err) }\n}, 1000);";
    }

    @Override // o8.a
    public final String v() {
        return "let exit = setTimeout(() => {\n    clearInterval(temp);\n    clearTimeout(exit);\n    Android.callbackHandle(JSON.stringify({ result: \"timeout\" }));\n}, 20000);\nfunction isNeedLogin() {\n    return !!(document.getElementsByClassName('loginBtn')[0] || (basefrm && basefrm.document.getElementsByClassName('loginBtn')[0]))\n}\nlet temp = setInterval(() => {\n    try {\n        if (isNeedLogin()) {\n            clearInterval(temp);\n            clearTimeout(exit);\n            Android.callbackHandle(JSON.stringify({ result: \"need_login\" }));\n        } else {\n            Android.callbackHandle(JSON.stringify({ result: \"showing_info\" }));\n\n            if (window.frames[2]) {\n                let frameContent = window.frames[2].document.getElementsByTagName('html')[0].innerHTML;\n                if (frameContent.includes('Wireless -- Basic') || frameContent.includes('Wireless -- Security')) {\n                    if (frameContent.includes('Wireless -- Basic')) {\n                        if (window.frames[2].document.getElementsByName(\"wlSsid\")[0].value) {\n                            Android.callbackHandle(JSON.stringify({\n                                result: \"basic_wifi_info_1\",\n                                ssidName: window.frames[2].document.getElementsByName(\"wlSsid\")[0].value,\n                                password: null,\n                                hidden: window.frames[2].document.getElementsByName(\"wlHide\")[0].checked,\n                                safe: null,\n                                maxClients: null\n                            }));\n\n                            let heading = window.frames[1].document.evaluate(\"//a[contains(., 'Security')]\", window.frames[1].document, null, XPathResult.ANY_TYPE, null);\n                            heading.iterateNext()\n                            let menuItem = heading.iterateNext();\n                            menuItem.click();\n                        }\n\n                    } else {\n                        if (window.frames[2].document.getElementsByName(\"wlAuthMode\")[0].value) {\n                            Android.callbackHandle(JSON.stringify({\n                                result: \"basic_wifi_info_2\",\n                                ssidName: null,\n                                password: window.frames[2].document.forms[0].wlWpaPsk.value,\n                                hidden: null,\n                                safe: window.frames[2].document.getElementsByName(\"wlAuthMode\")[0].value != 'open',\n                                maxClients: null\n                            }));\n\n                            clearInterval(temp);\n                            clearTimeout(exit);\n                        }\n                    }\n                } else {\n                    let heading = window.frames[1].document.evaluate(\"//a[contains(., 'Basic')]\", window.frames[1].document, null, XPathResult.ANY_TYPE, null);\n                    let menuItem = heading.iterateNext();\n                    menuItem.click();\n                }\n            }\n        }\n    } catch (err) { Android.callbackHandle(err) }\n}, 700);\n";
    }

    @Override // o8.a
    public final String w(boolean z10) {
        return "let blockerEnabled = " + z10 + ";\nlet exit = setTimeout(() => {\n    clearInterval(temp);\n    clearTimeout(exit);\n    Android.callbackHandle(JSON.stringify({ result: \"timeout\" }));\n}, 20000);\nfunction isNeedLogin() {\n    return !!(document.getElementsByClassName('loginBtn')[0] || (window.frames[2] && window.frames[2].document.getElementsByClassName('loginBtn')[0]))\n}\nlet temp = setInterval(() => {\n    try {\n        if (isNeedLogin()) {\n            clearInterval(temp);\n            clearTimeout(exit);\n            Android.callbackHandle(JSON.stringify({ result: \"need_login\" }));\n        } else {\n            Android.callbackHandle(JSON.stringify({ result: \"applying_settings\" }));\n            if (window.frames[2]) {\n                let htmlContent = window.frames[2].document.getElementsByTagName('html')[0].innerHTML;\n                if (htmlContent.includes('Wireless -- MAC Filter')) {\n                    if (blockerEnabled) window.frames[2].document.getElementsByName('wlFltMacMode')[2].click();\n                    else window.frames[2].document.getElementsByName('wlFltMacMode')[0].click()\n                    setTimeout(() => Android.callbackHandle(JSON.stringify({ result: \"executed\" })), 500);\n                    clearInterval(temp);\n                    clearTimeout(exit);\n                } else {\n                    let heading = window.frames[1].document.evaluate(\"//a[contains(., 'MAC Filter')]\", window.frames[1].document, null, XPathResult.ANY_TYPE, null);\n                    heading.iterateNext();\n                    let menuItem = heading.iterateNext();\n                    menuItem.click();\n                }\n            }\n        }\n    } catch (err) { Android.callbackHandle(err) }\n}, 1000);";
    }

    @Override // o8.a
    public final String x(String str, String str2) {
        return e0.d.a("let mac = \"", str2, "\";\nlet exit = setTimeout(() => {\n    clearInterval(temp);\n    clearTimeout(exit);\n    Android.callbackHandle(JSON.stringify({ result: \"timeout\" }));\n}, 20000);\nfunction isNeedLogin() {\n    return !!(document.getElementsByClassName('loginBtn')[0] || (window.frames[2] && window.frames[2].document.getElementsByClassName('loginBtn')[0]))\n}\nfunction markMac(mac) {\n    let heading = window.frames[2].document.evaluate(\"//tr[contains(., '\" + mac + \"')]\", window.frames[2].document, null, XPathResult.ANY_TYPE, null);\n    heading.iterateNext().children[1].children[0].click();\n}\nlet temp = setInterval(() => {\n    try {\n        if (isNeedLogin()) {\n            clearInterval(temp);\n            clearTimeout(exit);\n            Android.callbackHandle(JSON.stringify({ result: \"need_login\" }));\n        } else {\n            Android.callbackHandle(JSON.stringify({ result: \"applying_settings\" }));\n            if (window.frames[2]) {\n                let htmlContent = window.frames[2].document.getElementsByTagName('html')[0].innerHTML;\n                if (htmlContent.includes('Wireless -- MAC Filter')) {\n                    markMac(mac);\n                    window.frames[2].document.querySelector(\"input[value='Remove']\").click();\n                    setTimeout(() => Android.callbackHandle(JSON.stringify({ result: \"executed\" })), 1000);\n                    clearInterval(temp);\n                    clearTimeout(exit);\n\n                } else {\n                    let heading = window.frames[1].document.evaluate(\"//a[contains(., 'MAC Filter')]\", window.frames[1].document, null, XPathResult.ANY_TYPE, null);\n                    heading.iterateNext();\n                    let menuItem = heading.iterateNext();\n                    menuItem.click();\n                }\n            }\n        }\n    } catch (err) { Android.callbackHandle(err) }\n}, 1000);");
    }
}

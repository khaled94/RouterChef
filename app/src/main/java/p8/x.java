package p8;

import l0.d;
import s.b;

/* loaded from: classes.dex */
public final class x extends u {
    public x() {
        this.f16791d = "ZTEH188A";
        this.f16792e = "/getpage.lua?pid=1002&nextpage=Localnet_WlanBasicUser_t.lp";
        this.f16794g = "/getpage.lua?pid=1002&nextpage=Localnet_LocalnetStatusUser_t.lp";
        this.f16795h = "/getpage.lua?pid=1002&nextpage=Internet_AdminInternetStatus_DSL_t.lp";
        this.f16796i = "/getpage.lua?pid=1002&nextpage=Localnet_WlanBasicUser_t.lp";
        this.f16798k = "/getpage.lua?pid=1002&nextpage=Internet_Dsl_t.lp";
        this.f16799l = "/getpage.lua?pid=1002&nextpage=ManagDiag_DeviceManag_t.lp";
        this.f16800m = "/getpage.lua?pid=1002&nextpage=Localnet_LanMgrIpv4_t.lp";
        this.f16806t = true;
        this.f16807u = true;
        this.f16810x = false;
        this.y = false;
        this.A = false;
    }

    @Override // p8.u, o8.a
    public final String b(boolean z10, String str, String str2) {
        StringBuilder sb = new StringBuilder();
        sb.append("let ispDns = ");
        sb.append(z10);
        sb.append(";\nlet dns1 = \"");
        sb.append(str);
        sb.append("\";\nlet dns2 = \"");
        return b.b(sb, str2, "\";\n\nfunction setDNSString(id, dns) {\n    let dnsEntries = dns.split(\".\");\n    for (let i = 0; i < 4; i++) {\n        document.getElementById(id + i).value = dnsEntries[i];\n    }\n}\n\nlet exit = setTimeout(() => {\n    clearInterval(temp);\n    clearTimeout(exit);\n    Android.callbackHandle(JSON.stringify({ result: \"timeout\" }));\n}, 10000);\n\nlet temp = setInterval(() => {\n    try {\n        if (document.getElementsByClassName(\"emFont loginTitle\")[0]) {\n            clearInterval(temp);\n            clearTimeout(exit);\n            Android.callbackHandle(JSON.stringify({ result: \"need_login\" }));\n        }\n        else if (document.getElementById(\"DHCPBasicCfg_container\").style.display == \"none\") {\n            document.getElementById('DHCPBasicCfgBar').click();\n            Android.callbackHandle(JSON.stringify({ result: \"applying_settings\" }));\n        } else {\n            if (ispDns) {\n                document.getElementById(\"DnsServerSource1\").checked = true;\n                document.getElementById(\"Btn_apply_DHCPBasicCfg\").dispatchEvent(new Event(\"click\"));\n                clearInterval(temp);\n                clearTimeout(exit);\n                setTimeout(() => {\n                    Android.callbackHandle(JSON.stringify({ result: \"executed\" }));\n                }, 1000)\n            }\n            else if (document.getElementById(\"sub_DNSServer10\")) {\n                document.getElementById(\"DnsServerSource0\").checked = true;\n                document.getElementById(\"DnsServerSource1\").dispatchEvent(new Event(\"change\"))\n                setDNSString(\"sub_DNSServer1\", dns1);\n                setDNSString(\"sub_DNSServer2\", dns2);\n                document.getElementById(\"Btn_apply_DHCPBasicCfg\").dispatchEvent(new Event(\"click\"));\n                clearInterval(temp);\n                clearTimeout(exit);\n                setTimeout(() => {\n                    Android.callbackHandle(JSON.stringify({ result: \"executed\" }));\n                }, 1000)\n            }\n        }\n    } catch (err){ }\n}, 500);");
    }

    @Override // p8.u, o8.a
    public final String c(boolean z10, String str) {
        return "let limited = " + z10 + ";\nlet exit = setTimeout(() => {\n    clearInterval(temp);\n    clearTimeout(exit);\n    Android.callbackHandle(JSON.stringify({ result: \"timeout\" }));\n}, 10000);\n\nlet temp = setInterval(() => {\n    try {\n        if (document.getElementsByClassName(\"emFont loginTitle\")[0]) {\n            clearInterval(temp);\n            clearTimeout(exit);\n            Android.callbackHandle(JSON.stringify({ result: \"need_login\" }));\n        }\n        else if (document.getElementById(\"WlanBasicAdConf_container\").style.display == \"none\") {\n            document.getElementById('WlanBasicAdConfBar').click();\n            Android.callbackHandle(JSON.stringify({ result: \"applying_settings\" }));\n        } else {\n            document.getElementById(\"UI_Standard:0\").value = (limited) ? \"b\" : \"b,g,n\";\n\n            document.getElementById(\"Btn_apply_WlanBasicAdConf:0\").click();\n            clearInterval(temp);\n            clearTimeout(exit);\n            Android.callbackHandle(JSON.stringify({ result: \"executed\" }));\n        }\n    } catch (err){ }\n}, 500);";
    }

    @Override // p8.u, o8.a
    public final String d(String str, String str2) {
        return d.b("let username=\"", str, "\";\nlet password=\"", str2, "\";\n\nlet exit = setTimeout(() => {\n    clearInterval(temp);\n    clearTimeout(exit);\n    Android.callbackHandle(JSON.stringify({ result: \"timeout\" }));\n}, 10000);\n\nlet temp = setInterval(() => {\n    try {\n        if (document.getElementsByClassName(\"emFont loginTitle\")[0]) {\n            clearInterval(temp);\n            clearTimeout(exit);\n            Android.callbackHandle(JSON.stringify({ result: \"need_login\" }));\n        }\n        else if (document.getElementById(\"changeArea_Internet:0\").style.display == \"none\") {\n            document.getElementById('instName_Internet:0').click();\n            Android.callbackHandle(JSON.stringify({ result: \"applying_settings\" }));\n        } else {\n            document.getElementById(\"UserName:0\").value = username;\n            document.getElementById(\"Password:0\").value = password;\n            document.getElementById(\"Btn_apply_internet:0\").click();\n            clearInterval(temp);\n            clearTimeout(exit);\n            Android.callbackHandle(JSON.stringify({ result: \"executed\" }));\n        }\n    } catch (err){ }\n}, 500);");
    }

    @Override // p8.u, o8.a
    public final String f(String str, String str2, String str3, boolean z10, boolean z11) {
        StringBuilder sb = new StringBuilder();
        sb.append("let ssid = \"");
        sb.append(str);
        sb.append("\";\nlet hidden = ");
        sb.append(z10);
        sb.append(";\nlet password = \"");
        sb.append(str2);
        sb.append("\";\nlet open = ");
        sb.append(z11);
        sb.append(";\nlet maxClients = \"");
        return b.b(sb, str3, "\";\n\nlet applied = false;\nlet exit = setTimeout(() => {\n    clearInterval(temp);\n    clearTimeout(exit);\n    Android.callbackHandle(JSON.stringify({ result: \"timeout\" }));\n}, 10000);\n\nlet temp = setInterval(() => {\n    try {\n        if (document.getElementsByClassName(\"emFont loginTitle\")[0]) {\n            clearInterval(temp);\n            clearTimeout(exit);\n            Android.callbackHandle(JSON.stringify({ result: \"need_login\" }));\n        }\n        else if (document.getElementById(\"WLANSSIDConf_container\").style.display == \"none\") {\n            document.getElementById('WLANSSIDConfBar').click();\n            Android.callbackHandle(JSON.stringify({ result: \"applying_settings\" }));\n        } else {\n            if (document.getElementById(\"confirmLayer\").style.display != 'none') {\n                document.getElementById(\"confirmOK\").click();\n                clearInterval(temp)\n                clearTimeout(exit);\n                setTimeout(() => {\n                    Android.callbackHandle(JSON.stringify({ result: \"executed\" }));\n                }, 1000);\n\n            }else if(applied){\n                clearInterval(temp)\n                clearTimeout(exit);\n                setTimeout(() => {\n                    Android.callbackHandle(JSON.stringify({ result: \"executed\" }));\n                }, 1000);\n            }\n            else if (!document.getElementById(\"KeyPassphrase:0\").value.includes(\"/t\") && document.getElementById(\"KeyPassphrase:0\").value != \"\t\t\t\t\t\t\") {\n\n                document.getElementById(\"ESSID:0\").value = ssid;\n\n                if (hidden) {\n                    document.getElementById(\"ESSIDHideEnable0:0\").checked = true;\n                } else {\n                    document.getElementById(\"ESSIDHideEnable1:0\").checked = true;\n                }\n\n                if (!open) {\n                    document.getElementById(\"EncryptionType:0\").value = \"WPA/WPA2-PSK-TKIP/AES\";\n                    if (password) {\n                        document.getElementById(\"KeyPassphrase:0\").value = password;\n                    }\n                } else {\n                    document.getElementById(\"EncryptionType:0\").value = \"No Security\";\n                }\n                document.getElementById(\"MaxUserNum:0\") && (document.getElementById(\"MaxUserNum:0\").value = maxClients);\n                if (document.getElementById(\"Btn_apply_WLANSSIDConf:0\")) {\n                    document.getElementById(\"Btn_apply_WLANSSIDConf:0\").click();\n                    applied = true;\n                }\n            } else {\n                document.getElementById(\"Switch_KeyPassType:0\").click();\n            }\n        }\n    } catch (err){ }\n}, 1000);");
    }

    @Override // p8.u, o8.a
    public final String j(String str, String str2) {
        return d.b("let username = \"", str, "\";\nlet password = \"", str2, "\";\n\nlet exit = setTimeout(() => {\n    clearInterval(temp);\n    clearTimeout(exit);\n    Android.callbackHandle(JSON.stringify({ result: \"timeout\" }));\n}, 25000);\nlet temp = setInterval(() => {\n    try {\n        if (document.getElementById(\"login_error_waittime\") && document.getElementById(\"login_error_waittime\").value > 1) {\n            let seconds = document.getElementById(\"login_error_waittime\").value;\n            clearInterval(temp);\n            clearTimeout(exit);\n            Android.callbackHandle(JSON.stringify({ result: \"retry_after\", time: parseInt(seconds) }));\n        }\n        else {\n            if ([...document.getElementsByTagName(\"input\")].filter(input => input.value == \"Skip\")[0]) {\n                [...document.getElementsByTagName(\"input\")].filter(input => input.value == \"Skip\")[0].click();\n                Android.callbackHandle(JSON.stringify({ result: \"enforce_login\" }));\n            }\n            else if (document.getElementById(\"NewPassword\")) {\n                document.getElementById(\"Btn_cancel\").click();\n            }\n            else if (document.getElementById('login_error_span')) {\n\n                if (document.getElementById('Frm_Username')) {\n                    Android.callbackHandle(JSON.stringify({ result: \"logging_in\" }));\n                    document.getElementById('Frm_Username').value = username;\n                    document.getElementById('Frm_Password').value = password;\n                    document.getElementById('LoginId').click();\n                }\n                if (document.getElementById('login_error_span').innerText.includes(\"error.\")) {\n                    Android.callbackHandle(JSON.stringify({ result: \"invalid_login\" }));\n                }\n\n            } else if (document.getElementById(\"radio1\")) {\n                Android.callbackHandle(JSON.stringify({ result: \"enforce_login\" }));\n                document.getElementById(\"radio1\").checked = true;\n                document.getElementById(\"Btn_apply\").click();\n            } else if (document.getElementById(\"Btn_Finish\")) {\n                document.getElementById(\"Btn_Finish\").click();\n            } else if (document.getElementById(\"Btn_Next\")) {\n                Android.callbackHandle(JSON.stringify({ result: \"enforce_login\" }));\n                document.getElementById(\"Btn_Next\").click();\n            } else if (document.getElementById('WANUrl')) {\n                clearInterval(temp);\n                clearTimeout(exit);\n                Android.callbackHandle(JSON.stringify({ result: \"login_success\" }));\n            }\n        }\n    } catch (err){ }\n}, 500);");
    }

    @Override // p8.u, o8.a
    public final String k() {
        return "let exit = setTimeout(() => {\n    clearInterval(temp);\n    clearTimeout(exit);\n    Android.callbackHandle(JSON.stringify({ result: \"timeout\" }));\n}, 10000);\n\nlet temp = setInterval(() => {\n    try {\n        if (document.getElementsByClassName(\"emFont loginTitle\")[0]) {\n            clearInterval(temp);\n            clearTimeout(exit);\n            Android.callbackHandle(JSON.stringify({ result: \"need_login\" }));\n        }\n        else if (document.getElementById(\"confirmOK\").style.display == \"block\") {\n            document.getElementById('confirmOK').click();\n            clearInterval(temp);\n            clearTimeout(exit);\n            Android.callbackHandle(JSON.stringify({ result: \"executed\" }));\n        } else {\n            Android.callbackHandle(JSON.stringify({ result: \"applying_settings\" }));\n            document.getElementById(\"Btn_restart\").click();\n        }\n    } catch (err){ }\n}, 500);";
    }

    @Override // p8.u, o8.a
    public final String l() {
        return "let exit = setTimeout(() => {\n    clearInterval(temp);\n    clearTimeout(exit);\n    Android.callbackHandle(JSON.stringify({ result: \"timeout\" }));\n}, 10000);\n\nlet temp = setInterval(() => {\n    try {\n        if (document.getElementsByClassName(\"emFont loginTitle\")[0]) {\n            clearInterval(temp);\n            clearTimeout(exit);\n            Android.callbackHandle(JSON.stringify({ result: \"need_login\" }));\n        }\n        else if (document.getElementById(\"ResetManag_container\").style.display == \"none\") {\n            document.getElementById('ResetManagBar').click();\n            Android.callbackHandle(JSON.stringify({ result: \"applying_settings\" }));\n        } else if (document.getElementById(\"confirmOK\").style.display == \"block\") {\n            document.getElementById('confirmOK').click();\n            clearInterval(temp);\n            clearTimeout(exit);\n            Android.callbackHandle(JSON.stringify({ result: \"executed\" }));\n        }\n        else {\n            Android.callbackHandle(JSON.stringify({ result: \"applying_settings\" }));\n            document.getElementById(\"Btn_reset\").click();\n        }\n    } catch (err){ }\n}, 500);";
    }

    @Override // p8.u, o8.a
    public final String p() {
        return "function getDNSString(id) {\n    let dns=\"\";\n    for (let i = 0; i < 4; i++) {\n        dns += document.getElementById(id + i).value + \".\"\n    }\n    return dns.slice(0, -1);\n}\n\nlet exit = setTimeout(() => {\n    clearInterval(temp);\n    clearTimeout(exit);\n    Android.callbackHandle(JSON.stringify({ result: \"timeout\" }));\n}, 10000);\n\nlet temp = setInterval(() => {\n    try {\n        if (document.getElementsByClassName(\"emFont loginTitle\")[0]) {\n            clearInterval(temp);\n            clearTimeout(exit);\n            Android.callbackHandle(JSON.stringify({ result: \"need_login\" }));\n        }\n        else if (document.getElementById(\"DHCPBasicCfg_container\").style.display == \"none\") {\n            document.getElementById('DHCPBasicCfgBar').click();\n            Android.callbackHandle(JSON.stringify({ result: \"showing_info\" }));\n        } else {\n            clearInterval(temp);\n            clearTimeout(exit);\n            let isIspDns = document.getElementById(\"DnsServerSource1\").checked;\n            Android.callbackHandle(JSON.stringify({\n                result: \"dns_info\",\n                ispDns: isIspDns,\n                dns1: !isIspDns ? getDNSString(\"sub_DNSServer1\"):null,\n                dns2:!isIspDns?getDNSString(\"sub_DNSServer2\"):null\n            }));\n\n        }\n    } catch (err){ }\n}, 500);";
    }

    @Override // p8.u, o8.a
    public final String q() {
        return "let exit = setTimeout(() => {\n    clearInterval(temp);\n    clearTimeout(exit);\n    Android.callbackHandle(JSON.stringify({ result: \"timeout\" }));\n}, 10000);\n\nlet temp = setInterval(() => {\n    try {\n        if (document.getElementsByClassName(\"emFont loginTitle\")[0]) {\n            clearInterval(temp);\n            clearTimeout(exit);\n            Android.callbackHandle(JSON.stringify({ result: \"need_login\" }));\n        }\n        else if (document.getElementById(\"WlanBasicAdConf_container\").style.display == \"none\") {\n            document.getElementById('WlanBasicAdConfBar').click();\n            Android.callbackHandle(JSON.stringify({ result: \"showing_info\" }));\n        } else {\n            Android.callbackHandle(JSON.stringify({\n                result: \"limit_wifi_info\",\n                speed: document.getElementById(\"UI_Standard:0\").value,\n                power: null\n            }));\n\n            clearInterval(temp);\n            clearTimeout(exit);\n        }\n    } catch (err){ }\n}, 500);";
    }

    @Override // p8.u, o8.a
    public final String r() {
        return "let exit = setTimeout(() => {\n    clearInterval(temp);\n    clearTimeout(exit);\n    Android.callbackHandle(JSON.stringify({ result: \"timeout\" }));\n}, 15000);\n\nlet temp = setInterval(() => {\n    try {\n        if (document.getElementsByClassName(\"emFont loginTitle\")[0]) {\n            clearInterval(temp);\n            clearTimeout(exit);\n            Android.callbackHandle(JSON.stringify({ result: \"need_login\" }));\n\n        } else {\n            Android.callbackHandle(JSON.stringify({ result: \"showing_info\" }));\n            let lineRate = document.getElementById('crate:0').innerText;\n            let upload = (Number(lineRate.split('/')[0]) / 1024).toFixed(1);\n            let download = (Number(lineRate.split('/')[1].split(\"k\")[0]) / 1024).toFixed(1);\n            let lineRateMb = upload + \"/\" + download + \" Mbps\";\n\n            let maxRate = document.getElementById('cmaxrate:0').innerText;\n            let maxUpload = (Number(maxRate.split('/')[0]) / 1024).toFixed(1);\n            let maxDownload = (Number(maxRate.split('/')[1].split(\"k\")[0]) / 1024).toFixed(1);\n            let maxRateMb = maxUpload + \"/\" + maxDownload + \" Mbps\";\n\n\n            if (document.getElementById(\"cModule_type:0\").innerText == 'N/A') {\n                Android.callbackHandle(JSON.stringify({ result: \"null_dsl_info\" }));\n                clearInterval(temp);\n                clearTimeout(exit);\n            } else {\n\n                let info = {\n                    result: \"dsl_info\",\n                    modType: document.getElementById(\"cModule_type:0\").innerText,\n                    upload: upload,\n                    download: download,\n                    lineRate: lineRateMb,\n                    maxUpload: maxUpload,\n                    maxDownload: maxDownload,\n                    maxRate: maxRateMb,\n                    noise: document.getElementById('cmargin:0').innerText,\n                    chanType: document.getElementById('cdatapath:0').innerText,\n                    depth: document.getElementById('cdepth:0').innerText,\n                    delay: document.getElementById('cdelay:0').innerText,\n                    crc: document.getElementById('ccrc:0').innerText,\n                    fec: document.getElementById('cfec:0').innerText,\n                    upTime: document.getElementById('cststart:0').innerText\n                }\n\n                clearInterval(temp);\n                clearTimeout(exit);\n                Android.callbackHandle(JSON.stringify(info));\n            }\n        }\n    } catch (err){ }\n}, 500);";
    }

    @Override // p8.u, o8.a
    public final String t() {
        return "let exit = setTimeout(() => {\n    clearInterval(temp);\n    clearTimeout(exit);\n    Android.callbackHandle(JSON.stringify({ result: \"timeout\" }));\n}, 10000);\n\nlet temp = setInterval(() => {\n    try {\n        if (document.getElementsByClassName(\"emFont loginTitle\")[0]) {\n            clearInterval(temp);\n            clearTimeout(exit);\n            Android.callbackHandle(JSON.stringify({ result: \"need_login\" }));\n        }\n        else if (document.getElementById(\"changeArea_Internet:0\").style.display == \"none\") {\n            document.getElementById('instName_Internet:0').click();\n            Android.callbackHandle(JSON.stringify({ result: \"showing_info\" }));\n        } else {\n            clearInterval(temp);\n            clearTimeout(exit);\n            Android.callbackHandle(JSON.stringify({\n                result: \"ppp_info\",\n                pppUsername: document.getElementById(\"UserName:0\").value,\n                pppPassword: null\n            }));\n\n        }\n    } catch (err){ }\n}, 500);";
    }

    @Override // p8.u, o8.a
    public final String v() {
        return "let exit = setTimeout(() => {\n    clearInterval(temp);\n    clearTimeout(exit);\n    Android.callbackHandle(JSON.stringify({ result: \"timeout\" }));\n}, 15000);\n\nlet temp = setInterval(() => {\n    try {\n        if (document.getElementsByClassName(\"emFont loginTitle\")[0]) {\n            clearInterval(temp);\n            clearTimeout(exit);\n            Android.callbackHandle(JSON.stringify({ result: \"need_login\" }));\n        }\n        else if (document.getElementById(\"WLANSSIDConf_container\").style.display == \"none\") {\n            document.getElementById('WLANSSIDConfBar').click();\n            Android.callbackHandle(JSON.stringify({ result: \"showing_info\" }));\n        } else {\n            if (document.getElementById(\"Switch_KeyPassType:0\")&&!document.getElementById(\"Switch_KeyPassType:0\").checked) {\n                document.getElementById(\"Switch_KeyPassType:0\").click();\n            } else {\n                Android.callbackHandle(JSON.stringify({ result: \"showing_info\" }));\n                if (!document.getElementById(\"KeyPassphrase:0\").value.includes(\"/t\") && document.getElementById(\"KeyPassphrase:0\").value != \"\t\t\t\t\t\t\") {\n                    let maxClients = document.getElementById(\"MaxUserNum:0\") ? document.getElementById(\"MaxUserNum:0\").value : null;\n                    Android.callbackHandle(JSON.stringify({\n                        result: \"basic_wifi_info\",\n                        ssidName: document.getElementById(\"ESSID:0\").value,\n                        password: document.getElementById(\"KeyPassphrase:0\").value,\n                        hidden: !document.getElementById(\"ESSIDHideEnable1:0\").checked,\n                        safe: document.getElementById(\"EncryptionType:0\").value.includes(\"WPA\") || document.getElementById(\"EncryptionType:0\").value.includes(\"11i\"),\n                        maxClients: maxClients\n                    }));\n                    clearInterval(temp);\n                    clearTimeout(exit);\n                } else {\n                    if (!document.getElementById(\"Switch_KeyPassType:0\").checked) {\n                        document.getElementById(\"Switch_KeyPassType:0\").click();\n                    }\n                }\n            }\n        }\n    } catch (err){ }\n}, 500);\n";
    }
}
